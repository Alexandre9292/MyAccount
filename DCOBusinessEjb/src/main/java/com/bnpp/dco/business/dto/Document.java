package com.bnpp.dco.business.dto;

// Generated 10 sept. 2013 15:39:58 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Arrays;
import java.util.Date;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Document generated by hbm2java
 */
@Entity
@Table(name = "document", catalog = "dco")
public class Document implements java.io.Serializable {

    private static final long serialVersionUID = -4158924099948129496L;
    private Integer id;
    private LegalEntity legalEntity;
    private Country country;
    private Language language;
    private DocumentType documentType;
    private byte[] data;
    private String title;
    private Date uptodate;
    private Boolean resident;
    private Boolean xbasV2;

    public Document() {
    }

    public Document(final DocumentType documentType, final byte[] dataFlow, final String title) {
        this.documentType = documentType;
        if (dataFlow == null) {
            this.data = new byte[0];
        } else {
            this.data = Arrays.copyOf(dataFlow, dataFlow.length);
        }
        this.title = title;
    }

    public Document(final LegalEntity legalEntity, final Country country, final Language language,
            final DocumentType documentType, final byte[] dataFlow, final String title) {
        this.legalEntity = legalEntity;
        this.country = country;
        this.language = language;
        this.documentType = documentType;
        if (dataFlow == null) {
            this.data = new byte[0];
        } else {
            this.data = Arrays.copyOf(dataFlow, dataFlow.length);
        }
        this.title = title;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(final Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "ENTITY")
    public LegalEntity getLegalEntity() {
        return this.legalEntity;
    }

    public void setLegalEntity(final LegalEntity legalEntity) {
        this.legalEntity = legalEntity;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "COUNTRY")
    public Country getCountry() {
        return this.country;
    }

    public void setCountry(final Country country) {
        this.country = country;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "LANGUAGE")
    public Language getLanguage() {
        return this.language;
    }

    public void setLanguage(final Language language) {
        this.language = language;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "DOCUMENT_TYPE", nullable = false)
    public DocumentType getDocumentType() {
        return this.documentType;
    }

    public void setDocumentType(final DocumentType documentType) {
        this.documentType = documentType;
    }

    @Lob @Basic(fetch=FetchType.LAZY)
    @Column(name = "DATA", nullable = false)
    public byte[] getData() {
        return this.data;
    }

    public void setData(final byte[] dataFlow) {
        if (dataFlow == null) {
            this.data = new byte[0];
        } else {
            this.data = Arrays.copyOf(dataFlow, dataFlow.length);
        }
    }

    @Column(name = "TITLE", nullable = false, length = 100)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(final String title) {
        this.title = title;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPTODATE", length = 19)
    public Date getUptodate() {
        return this.uptodate;
    }

    public void setUptodate(final Date uptodate) {
        this.uptodate = uptodate;
    }

    @Column(name = "RESIDENT", nullable = false)
    public Boolean getResident() {
        return this.resident;
    }

    public void setResident(final Boolean resident) {
        this.resident = resident;
    }

    @Column(name = "XBAS", nullable = false)
	public Boolean getXbasV2() {
		return xbasV2;
	}

	public void setXbasV2(Boolean xbasV2) {
		this.xbasV2 = xbasV2;
	}

}
