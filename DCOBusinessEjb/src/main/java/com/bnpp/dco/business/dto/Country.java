package com.bnpp.dco.business.dto;

// Generated 2 sept. 2013 15:02:16 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Country generated by hbm2java
 */
@Entity
@Table(name = "country", catalog = "dco")
public class Country implements java.io.Serializable {

    /** Serial. */
    private static final long serialVersionUID = 1L;
    private Integer id;
    private LegalEntity legalEntity;
    private String locale;
    private Set documents = new HashSet(0);
    private Set languages = new HashSet(0);
    private Set accounts = new HashSet(0);
    private Set representatives = new HashSet(0);
    
	private boolean com_lang_enabled = false;

    public Country() {
    }

    public Country(final String locale) {
        this.locale = locale;
    }

    public Country(final Integer id) {
        this.id = id;
    }

    public Country(final LegalEntity legalEntity, final String locale, final Set documents, final Set languages) {
        this.legalEntity = legalEntity;
        this.locale = locale;
        this.documents = documents;
        this.languages = languages;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(final Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "LEAGL_ENTITY")
    public LegalEntity getLegalEntity() {
        return this.legalEntity;
    }

    public void setLegalEntity(final LegalEntity legalEntity) {
        this.legalEntity = legalEntity;
    }

    @Column(name = "LOCALE", nullable = false, length = 10)
    public String getLocale() {
        return this.locale;
    }

    public void setLocale(final String locale) {
        this.locale = locale;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "country")
    public Set<Document> getDocuments() {
        return this.documents;
    }

    public void setDocuments(final Set documents) {
        this.documents = documents;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "country_language", catalog = "dco", joinColumns = {@JoinColumn(name = "COUNTRY", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "LANGUAGE", nullable = false, updatable = false)})
    public Set<Language> getLanguages() {
        return this.languages;
    }

    public void setLanguages(final Set languages) {
        this.languages = languages;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "countryAccount")
    public Set<Account> getAccounts() {
        return this.accounts;
    }

    public void setAccounts(final Set accounts) {
        this.accounts = accounts;
    }

    /**
     * @return the com_lang_enabled
     */
    public boolean isCom_lang_enabled() {
        return this.com_lang_enabled;
    }

    /**
     * @param com_lang_enabled the com_lang_enabled to set
     */
    public void setCom_lang_enabled(final boolean com_lang_enabled) {
        this.com_lang_enabled = com_lang_enabled;
    }

	/**
	 * @return the representatives
	 */
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "country_representatives", catalog = "dco", joinColumns = {@JoinColumn(name = "country_ID", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "representative_ID", nullable = false, updatable = false)})
    public Set<Representatives> getRepresentatives() {
		return representatives;
	}

	/**
	 * @param representatives the representatives to set
	 */
	public void setRepresentatives(Set representatives) {
		this.representatives = representatives;
	}
    
}
