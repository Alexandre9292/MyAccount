package com.bnpp.dco.business.dto;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Language generated by hbm2java
 */
@Entity
@Table(name = "language", catalog = "dco")
public class Language implements java.io.Serializable {

    /** Serial. */
    private static final long serialVersionUID = 1L;
    private Integer id;
    private String locale;
    private boolean userInterface;
    private String commercialMessageLogin;
    private String commercialMessageClient;
    private Set countries = new HashSet(0);
    private Set preferenceses = new HashSet(0);
    private Set documents = new HashSet(0);
    private Set paramFuncs = new HashSet(0);

    public Language() {
    }

    public Language(final Integer id) {
        this.id = id;
    }

    public Language(final String locale, final boolean userInterface) {
        this.locale = locale;
        this.userInterface = userInterface;
    }

    public Language(final String locale, final boolean userInterface, final String commercialMessageLogin,
            final String commercialMessageClient, final Set countries, final Set preferenceses,
            final Set documents, final Set paramFuncs) {
        this.locale = locale;
        this.userInterface = userInterface;
        this.commercialMessageLogin = commercialMessageLogin;
        this.commercialMessageClient = commercialMessageClient;
        this.countries = countries;
        this.preferenceses = preferenceses;
        this.documents = documents;
        this.paramFuncs = paramFuncs;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(final Integer id) {
        this.id = id;
    }

    @Column(name = "LOCALE", nullable = false, length = 10)
    public String getLocale() {
        return this.locale;
    }

    public void setLocale(final String locale) {
        this.locale = locale;
    }

    @Column(name = "USER_INTERFACE", nullable = false)
    public boolean isUserInterface() {
        return this.userInterface;
    }

    public void setUserInterface(final boolean userInterface) {
        this.userInterface = userInterface;
    }

    @Column(name = "COMMERCIAL_MESSAGE_LOGIN", length = 10000)
    public String getCommercialMessageLogin() {
        return this.commercialMessageLogin;
    }

    public void setCommercialMessageLogin(final String commercialMessageLogin) {
        this.commercialMessageLogin = commercialMessageLogin;
    }

    @Column(name = "COMMERCIAL_MESSAGE_CLIENT", length = 10000)
    public String getCommercialMessageClient() {
        return this.commercialMessageClient;
    }

    public void setCommercialMessageClient(final String commercialMessageClient) {
        this.commercialMessageClient = commercialMessageClient;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "country_language", catalog = "dco", joinColumns = {@JoinColumn(name = "LANGUAGE", nullable = false, updatable = false)}, inverseJoinColumns = {@JoinColumn(name = "COUNTRY", nullable = false, updatable = false)})
    public Set<Country> getCountries() {
        return this.countries;
    }

    public void setCountries(final Set countries) {
        this.countries = countries;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
    public Set<Preferences> getPreferenceses() {
        return this.preferenceses;
    }

    public void setPreferenceses(final Set preferenceses) {
        this.preferenceses = preferenceses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
    public Set<Document> getDocuments() {
        return this.documents;
    }

    public void setDocuments(final Set documents) {
        this.documents = documents;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "language")
    public Set<ParamFunc> getParamFuncs() {
        return this.paramFuncs;
    }

    public void setParamFuncs(final Set paramFuncs) {
        this.paramFuncs = paramFuncs;
    }

}
