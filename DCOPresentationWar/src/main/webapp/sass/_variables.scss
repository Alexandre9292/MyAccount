//== Media queries breakpoints
//
//## Define the breakpoints at which your layout will change, adapting to different screen sizes.

// Extra small screen / phone
//** Deprecated `$screen-xs` as of v3.0.1
$screen-xs:                  480px !default;
//** Deprecated `$screen-xs-min` as of v3.2.0
$screen-xs-min:              $screen-xs !default;
//** Deprecated `$screen-phone` as of v3.0.1
$screen-phone:               $screen-xs-min !default;

// Small screen / tablet
//** Deprecated `$screen-sm` as of v3.0.1
$screen-sm:                  768px !default;
$screen-sm-min:              $screen-sm !default;
//** Deprecated `$screen-tablet` as of v3.0.1
$screen-tablet:              $screen-sm-min !default;

// Medium screen / desktop
//** Deprecated `$screen-md` as of v3.0.1
$screen-md:                  992px !default;
$screen-md-min:              $screen-md !default;
//** Deprecated `$screen-desktop` as of v3.0.1
$screen-desktop:             $screen-md-min !default;

// Large screen / wide desktop
//** Deprecated `$screen-lg` as of v3.0.1
$screen-lg:                  1200px !default;
$screen-lg-min:              $screen-lg !default;
//** Deprecated `$screen-lg-desktop` as of v3.0.1
$screen-lg-desktop:          $screen-lg-min !default;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1) !default;
$screen-sm-max:              ($screen-md-min - 1) !default;
$screen-md-max:              ($screen-lg-min - 1) !default;


//== Grid system
//
//## Define your custom responsive grid.

//** Number of columns in the grid.
$grid-columns:              12 !default;
//** Padding between columns. Gets divided in half for the left and right.
$grid-gutter-width:         40px !default;
// Navbar collapse
//** Point at which the navbar becomes uncollapsed.
$grid-float-breakpoint:     $screen-sm-min !default;
//** Point at which the navbar begins collapsing.
$grid-float-breakpoint-max: ($grid-float-breakpoint - 1) !default;


//== Container sizes
//
//## Define the maximum width of `.container` for different screen sizes.

// Small screen / tablet
$container-tablet:             ((720px + $grid-gutter-width)) !default;
//** For `$screen-sm-min` and up.
$container-sm:                 $container-tablet !default;

// Medium screen / desktop
$container-desktop:            ((920px + $grid-gutter-width)) !default;
//** For `$screen-md-min` and up.
$container-md:                 $container-desktop !default;

// Large screen / wide desktop
$container-large-desktop:      ((1140px + $grid-gutter-width)) !default;
//** For `$screen-lg-min` and up.
$container-lg:                 $container-large-desktop !default;

//
// mixin for bullet proof font declaration syntax
//
@mixin declare-font-face($font-family, $font-filename, $font-weight : normal, $font-style :normal, $font-stretch : normal){
	@font-face{
		font-family: '#{$font-family}';
		src: url(#{$font-filename}.eot);
		src: url(#{$font-filename}.eot?#iefix) format('embedded-opentype'),
		url(#{$font-filename}.woff) format('woff'),
		url(#{$font-filename}.ttf) format('truetype'),
		url(#{$font-filename}.svg##{$font-family}) format('svg');
		font-weight: $font-weight;
		font-style: $font-style;
		font-stretch: $font-stretch;
	}
}
@include declare-font-face('BNPSans', 'fonts/bnpp_sans-webfont', 400);
@include declare-font-face('BNPSansCondensed', 'fonts/bnpp_sans_cond_v2-webfont', 400);
@include declare-font-face('BNPRounded', 'fonts/bnpp-rounded-v2', 400);
@include declare-font-face('OpenSansL', 'fonts/OpenSans-Light-webfont');
@include declare-font-face('OpenSansR', 'fonts/OpenSans-Regular-webfont');
@include declare-font-face('OpenSansSB', 'fonts/OpenSans-Semibold-webfont');

$fontL: 'OpenSansL';
$fontR: 'OpenSansR';
$fontM: 'OpenSansSB';

$basecolor : #fff;
$selection : #241a17;
$linkcolor : #2380d0;

$grey99 : #999;

$blacktext : #1d1d1b;
$primary: #15925f;

$quartEaseOut : cubic-bezier(0.165, 0.840, 0.440, 1.000);
$quartEaseIn : cubic-bezier(0.895, 0.030, 0.685, 0.220);
$quartEaseInOut : cubic-bezier(0.770, 0.000, 0.175, 1.000);

$quadEaseOut : cubic-bezier(0.250, 0.460, 0.450, 0.940);
$quadEaseIn : cubic-bezier(0.550, 0.085, 0.680, 0.530); 
$quadEaseInOut : cubic-bezier(0.455, 0.030, 0.515, 0.955);
